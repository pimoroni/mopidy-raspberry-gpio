[build-system]
requires = ["setuptools >= 66", "setuptools-scm >= 7.1"]
build-backend = "setuptools.build_meta"


[project]
name = "mopidy-mpd"
description = "Mopidy extension for GPIO input on a Raspberry Pi"
readme = "README.rst"
requires-python = ">= 3.11"
license = { text = "Apache-2.0" }
authors = [{ name = "Phil Howard", email = "phil@pimoroni.com" }]
classifiers = [
    "Environment :: No Input/Output (Daemon)",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Multimedia :: Sound/Audio :: Players",
]
dynamic = ["version"]
dependencies = [
    "mopidy >= 4.0.0a1",
    "pykka >= 4.0",
    "setuptools >= 66",
]

[project.optional-dependencies]
lint = ["ruff >= 0.8.2"]
test = ["pytest >= 7.2", "pytest-cov >= 4.0"]
typing = ["pygobject-stubs >= 2.12.0", "pyright >= 1.1.380"]
dev = ["mopidy-mpd[lint,test,typing]", "tox >= 4.21"]

[project.urls]
Source = "https://github.com/pimoroni/mopidy-raspberry-gpio"
Issues = "https://github.com/pimoroni/mopidy-raspberry-gpio/issues"

[project.entry-points."mopidy.ext"]
raspberry-gpio = "mopidy_raspberry_gpio:Extension"


[tool.pyright]
pythonVersion = "3.11"
# Use venv from parent directory, to share it with any extensions:
venvPath = "../"
venv = ".venv"
typeCheckingMode = "standard"
# Already covered by flake8-self:
reportPrivateImportUsage = false


[tool.ruff]
target-version = "py311"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN401", # any-type
    "D",      # pydocstyle
    "EM101",  # raw-string-in-exception  # TODO
    "EM102",  # f-string-in-exception  # TODO
    "FIX001", # line-contains-fixme
    "FIX002", # line-contains-todo
    "G004",   # logging-f-string
    "S101",   # assert  # TODO
    "TD002",  # missing-todo-author
    "TD003",  # missing-todo-link
    "TD004",  # missing-todo-colon  # TODO
    "TD005",  # missing-todo-description  # TODO
    "TRY003", # raise-vanilla-args
    #
    # These rules interfere with `ruff format`
    "COM812", # missing-trailing-comma
    "ISC001", # single-line-implicit-string-concatenation
]

[tool.ruff.lint.per-file-ignores]
"src/mopidy_mpd/protocol/*" = [
    "ARG001", # unused-function-argument
]
"tests/*" = [
    "ANN",     # flake8-annotations
    "ARG",     # flake8-unused-arguments
    "D",       # pydocstyle
    "FBT",     # flake8-boolean-trap
    "PLR0913", # too-many-arguments
    "PLR2004", # magic-value-comparison
    "PT027",   # pytest-unittest-raises-assertion
    "S101",    # assert
    "SLF001",  # private-member-access
    "TRY002",  # raise-vanilla-class
]


[tool.setuptools_scm]


[tool.tox]
requires = ["tox >= 4.21"]
env_list = ["3.11", "3.12", "3.13", "pyright", "ruff-lint", "ruff-format"]

[tool.tox.env_run_base]
deps = [".[test]"]
commands = [
    [
        "pytest",
        "--basetemp={envtmpdir}",
        "--cov=mopidy_mpd",
        "--cov-report=term-missing",
        "{posargs}",
    ],
]

[tool.tox.env.pyright]
deps = [".[typing]"]
commands = [["pyright", "{posargs:src}"]]

[tool.tox.env.ruff-lint]
deps = [".[lint]"]
commands = [["ruff", "check", "{posargs:.}"]]

[tool.tox.env.ruff-format]
deps = [".[lint]"]
commands = [["ruff", "format", "--check", "{posargs:.}"]]